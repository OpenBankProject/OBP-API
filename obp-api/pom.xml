<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">


  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.tesobe</groupId>
    <artifactId>obp-parent</artifactId>
    <relativePath>../pom.xml</relativePath>
    <version>1.4.3</version>
  </parent>
  <artifactId>obp-api</artifactId>
  <packaging>war</packaging>
  <name>Open Bank Project API</name>

  <pluginRepositories>
    <pluginRepository>
      <id>org.sonatype.oss.groups.public</id>
    <name>Sonatype Public</name>
      <url>https://oss.sonatype.org/content/groups/public</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>com.tesobe</groupId>
      <artifactId>obp-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.everit-org.json-schema</groupId>
      <artifactId>org.everit.json.schema</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-xml_${scala.version}</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-mapper_${scala.version}</artifactId>
      <version>${lift.version}</version>
    </dependency>
    <dependency>
      <groupId>net.databinder.dispatch</groupId>
      <artifactId>dispatch-lift-json_${scala.version}</artifactId>
      <version>0.13.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-json</artifactId>
      <version>${kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpg-jdk15on</artifactId>
      <version>1.47</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
      <version>1.62</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.2.8</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.191</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>6.0.6</version>
    </dependency>
<!--    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>6.2.0.jre8</version>
      <scope>test</scope>
    </dependency>-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version}</artifactId>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.eclipse.jetty.websocket/websocket-server -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
  </dependency>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-mongodb_${scala.version}</artifactId>
      <version>${lift.version}</version>
    </dependency>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-mongodb-record_${scala.version}</artifactId>
      <version>${lift.version}</version>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>htmlunit-driver</artifactId>
      <version>2.36.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-util</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.htmlunit</groupId>
      <artifactId>htmlunit</artifactId>
      <version>2.37.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.liftmodules</groupId>
      <artifactId>amqp_3.1_${scala.version}</artifactId>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>com.tokbox</groupId>
      <artifactId>opentok-server-sdk</artifactId>
      <version>3.0.0-beta.2</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.elasticsearch</groupId>
      <artifactId>elasticsearch</artifactId>
      <version>6.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.sksamuel.elastic4s</groupId>
      <artifactId>elastic4s-http_${scala.version}</artifactId>
      <version>6.1.1</version>
      <!-- TODO try to switch to slf4j from log4j
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-1.2-api</artifactId>
        </exclusion>
      </exclusions> -->
    </dependency>
    <!-- for LiftConsole -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.compiler}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.compiler}</version>
    </dependency>
    <dependency>
      <groupId>oauth.signpost</groupId>
      <artifactId>signpost-commonshttp4</artifactId>
      <version>1.2.1.2</version>
    </dependency>
    <dependency>
      <groupId>com.tesobe.obp</groupId>
      <artifactId>obp-ri-core</artifactId>
      <version>${obp-ri.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tesobe.obp</groupId>
      <artifactId>obp-ri-kafka</artifactId>
      <version>${obp-ri.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tesobe.obp</groupId>
      <artifactId>obp-ri-transport</artifactId>
      <version>${obp-ri.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-http-core -->
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-http-core_${scala.version}</artifactId>
      <version>10.1.6</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-actor_${scala.version}</artifactId>
      <version>${akka.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-remote_${scala.version}</artifactId>
      <version>${akka.version}</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-stream-kafka_${scala.version}</artifactId>
      <version>${akka-streams-kafka.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sksamuel.avro4s</groupId>
      <artifactId>avro4s-core_${scala.version}</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>chill-akka_${scala.version}</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>chill-bijection_${scala.version}</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>com.github.cb372</groupId>
      <artifactId>scalacache-guava_${scala.version}</artifactId>
      <version>0.9.3</version>
    </dependency>
    <dependency>
      <groupId>com.github.cb372</groupId>
      <artifactId>scalacache-redis_${scala.version}</artifactId>
      <version>0.9.3</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.akka</groupId>
      <artifactId>akka-slf4j_${scala.version}</artifactId>
      <version>${akka.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.github.dwickern/scala-nameof_2.11 -->
    <dependency>
      <groupId>com.github.dwickern</groupId>
      <artifactId>scala-nameof_${scala.version}</artifactId>
      <version>1.0.3</version>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>7.9</version>
    </dependency>
    <dependency>
      <groupId>com.github.OpenBankProject</groupId>
      <artifactId>scala-macros</artifactId>
      <version>v1.0.0-alpha.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.scalameta/scalameta -->
    <dependency>
      <groupId>org.scalameta</groupId>
      <artifactId>scalameta_${scala.version}</artifactId>
      <version>3.7.4</version>
    </dependency>
    <dependency>
      <groupId>ai.grakn</groupId>
      <artifactId>redis-mock</artifactId>
      <version>0.1.6</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.nimbusds/oauth2-oidc-sdk -->
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>oauth2-oidc-sdk</artifactId>
      <version>7.4</version>
    </dependency>
    <dependency>
      <groupId>com.vladsch.flexmark</groupId>
      <artifactId>flexmark-all</artifactId>
      <version>0.40.8</version>
    </dependency>
    <!--scala utils, for type scan-->
    <dependency>
      <groupId>org.clapper</groupId>
      <artifactId>classutil_${scala.version}</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.github.grumlimited</groupId>
      <artifactId>geocalc</artifactId>
      <version>0.5.7</version>
    </dependency>
    <!-- embeded kafka for unit test start -->
    <dependency>
      <groupId>net.manub</groupId>
      <artifactId>scalatest-embedded-kafka_2.12</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
    <!-- embeded kafka for unit test end -->
    <!-- https://mvnrepository.com/artifact/com.nexmo/client -->
    <dependency>
      <groupId>com.nexmo</groupId>
      <artifactId>client</artifactId>
      <version>4.0.1</version>
    </dependency>
    <dependency>
      <groupId>io.swagger.parser.v3</groupId>
      <artifactId>swagger-parser</artifactId>
      <version>2.0.13</version>
      <exclusions>
        <exclusion>
          <artifactId>mailapi</artifactId>
          <groupId>javax.mail</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.9.8</version>
    </dependency>

    <!-- convert word to plural -->
    <dependency>
      <groupId>org.atteo</groupId>
      <artifactId>evo-inflector</artifactId>
      <version>1.2.2</version>
    </dependency>
    <!-- modify class dynamically-->
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.25.0-GA</version>
    </dependency>
    <!-- Stripe client library. It is a payment gateway. -->
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>12.1.0</version>
    </dependency>
    <!-- grpc related begin-->
    <dependency>
      <groupId>com.thesamet.scalapb</groupId>
      <artifactId>scalapb-runtime-grpc_${scala.version}</artifactId>
      <version>0.8.4</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-all</artifactId>
      <version>1.25.0</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <version>2.0.27.Final</version>
    </dependency>
    <dependency>
      <groupId>org.asynchttpclient</groupId>
      <artifactId>async-http-client</artifactId>
      <version>2.10.4</version>
    </dependency>
    <!-- grpc related end-->

    <!-- scalikejdbc for call stored procedure start-->
    <dependency>
      <groupId>org.scalikejdbc</groupId>
      <artifactId>scalikejdbc_${scala.version}</artifactId>
      <version>3.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.microsoft.sqlserver</groupId>
      <artifactId>mssql-jdbc</artifactId>
      <version>8.1.0.jre${java.version}-preview</version>
    </dependency>
    <!-- scalikejdbc for call stored procedure end-->

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${scala.version}</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <!-- enable the scalatest plugin -->
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <forkMode>once</forkMode>
            <junitxml>.</junitxml>
            <filereports>WDF TestSuite.txt</filereports>
            <argLine>-Drun.mode=test -XX:MaxPermSize=128m -Xms512m -Xmx512m</argLine>
            <tagsToExclude>code.external</tagsToExclude>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
        <plugin>
          <!-- add src/main/java to source dirs -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.10</version>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>src/main/java</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.1</version>
          <executions>
            <execution>
              <id>default-copy-resources</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <overwrite>true</overwrite>
                <outputDirectory>${project.build.directory}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src</directory>
                    <includes>
                      <include>packageLinkDefs.properties</include>
                    </includes>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>

      <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>yuicompressor-maven-plugin</artifactId>
          <version>1.5.1</version>
          <executions>
            <execution>
              <goals>
                <goal>compress</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <nosuffix>true</nosuffix>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>maven-jetty-plugin</artifactId>
          <configuration>
            <contextPath>/</contextPath>
            <scanIntervalSeconds>5</scanIntervalSeconds>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-idea-plugin</artifactId>
          <version>2.2.1</version>
          <configuration>
            <downloadSources>true</downloadSources>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.10</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <additionalProjectnatures>
              <projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>
            </additionalProjectnatures>
            <additionalBuildcommands>
              <buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>
            </additionalBuildcommands>
            <classpathContainers>
              <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
              <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
            </classpathContainers>
          </configuration>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>2.2.1</version>
          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
            <generateGitPropertiesFile>true</generateGitPropertiesFile>
            <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
          </configuration>
        </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>${java.version}</release>
        </configuration>
      </plugin>
      <!--grpc related plugin begin-->
      <!-- currently not need, enable this plugin when need generate new grpc code.
      <plugin>
       <groupId>net.catte</groupId>
       <artifactId>scalapb-maven-plugin</artifactId>
       <version>1.2</version>
       <configuration>
         <javaOutput>false</javaOutput>
         <inputDirectory>${basedir}/src/main/protobuf</inputDirectory>
         <outputDirectory>${basedir}/src/main/scala</outputDirectory>
         <grpc>true</grpc>
       </configuration>
       <executions>
         <execution>
           <goals>
             <goal>compile</goal>
           </goals>
           <phase>generate-sources</phase>
         </execution>
       </executions>
     </plugin>-->
     <!--grpc related plugin end-->
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>

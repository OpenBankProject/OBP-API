#this is a sample props file you should edit and rename
#see https://www.assembla.com/wiki/show/liftweb/Properties for all the naming options, or just use "default.props" in this same folder

####################################
## Minimum Settings

### Log level
#logger.loglevel=INFO

### Logging to console will be disabled
### if logger.logfile is defined
#logger.logfile="obp-api.log"

#which data connector to use

#connector=mongodb
#connector=rest
#connector=kafka
#connector=obpjvm
connector=mapped

# Connector cache time-to-live in seconds, caching disabled if not set
#connector.cache.ttl.seconds=3

# OBP-JVM transport type. currently supported: kafka, mock
#obpjvm.transport=kafka

#if using kafka, set zookeeper host and brokers
#defaults to "localhost:2181" if not set
#kafka.zookeeper_host=localhost:2181
#kafka.bootstrap_hosts=localhost:9092

#if using kafka, the following is mandatory
#kafka.request_topic=Request
#kafka.response_topic=Response

#this is needed for oauth to work. it's important to access the api over this url, e.g.
# if this is 127.0.0.1 don't use localhost to access it.
# (this needs to be an URL)
# --for tests don't set it to 127.0.0.1, for some reason
hostname=http://localhost:8016

#this is only useful for running the api locally via RunWebApp
#if you use it, make sure this matches your hostname port!
#if you want to change the port when running via the command line, use "mvn -Djetty.port=8089 jetty:run" instead
tests.port=8016

## Enable remote Akka actor for data split
## If set to true, must set hostname and port
## of remote machine
#remotedata.enable=false
#remotedata.hostname=127.0.0.1
#remotedata.port=2662
## Arbitrary value used in order to assure us that
## remote and local sides are paired well
## Only needed when remotedata.enable=true
#remotedata.secret=CHANGE_ME

End of minimum settings
####################################

#if connector is mapped, set a database backend. If not set, this will be set to an in-memory h2 database by default
#you can use a no config needed h2 database by setting db.driver=org.h2.Driver and not including db.url
#db.driver=org.h2.Driver
#db.url=jdbc:h2:./lift_proto.db;DB_CLOSE_ON_EXIT=FALSE

#set this to false if you don't want the api payments call to work
payments_enabled=false

#secret key that allows access to api calls to get info about oauth tokens. You should change this
#to your own secret key
#BankMockKey=change_me

#tesobe specific settings

#rabbitMQ settings (used to communicate with HBCI project)
#connection.host=hostname
#connection.user=user
#connection.password=pw

#secret key that allows access to the "add cash transactions" api. You should change this to your own secret key
#cashApplicationKey=change_me

#secret key that allows access to the "add transactions" api. You should change this to your own secret key
importer_secret=change_me

#set this to true if you want to have the api to send a message to the hbci project to refresh transactions for an account
messageQueue.updateBankAccountsTransaction=false

#set this to true if you want to have the api listen for "create account" messages from the hbci project
messageQueue.createBankAccounts=false

#set this to true if you want to allow users to create sandbox test accounts with a starting balance
allow_sandbox_account_creation=true

#set this to true if you want to allow the "data import" api call
allow_sandbox_data_import=true

#secret key that allows access to the "data import" api. You should change this to your own secret key
sandbox_data_import_secret=change_me

#management modules

#set this to true if you want to allow users to delete accounts
allow_account_deletion=true

# This needs to be a list all the types of transaction_requests that we have tests for. Else those tests will fail
transactionRequests_supported_types=SANDBOX_TAN,FREE_FORM,SEPA,COUNTERPARTY,TRANSFER_TO_PHONE

# control the create and access to public views. 
allow_public_views =true

# Used to run external test against some OBP-API instance
#external.hostname=apisandbox.openbankproject.com
#external.https=true
#external.port=8080
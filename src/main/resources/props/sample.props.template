#this is a sample props file you should edit and rename
#see https://www.assembla.com/wiki/show/liftweb/Properties for all the naming options, or just use "default.props" in this same folder

### OBP-API configuration


### base configuration

#which data connector to use
connector=mapped
#connector=mongodb
#connector=kafka
#connector=kafka_lib_v0
#connector=...

#if using kafka connector, set zookeeper host
#kafka.zookeeper_host=123.45.67.89:2181

#cache time to live in seconds, caching disabled if not set
#kafka.cache.ttl.seconds=3

#if using kafka connector, the following is mandatory
#kafka.request_topic=Request
#kafka.response_topic=Response


#ElasticSearch
#allow_elasticsearch=true
#allow_elasticsearch_warehouse=true
#allow_elasticsearch_metrics=true

#ElasticSearch warehouse
#es.warehouse.index=warehouse
#es.warehouse.host=localhost
#es.warehouse.port.tcp=9300
#es.warehouse.port.http=9200

#ElasticSearch metrics
#es.metrics.index=metrics
#es.metrics.host=localhost
#es.metrics.port.tcp=9300
#es.metrics.port.http=9200


#you can use a no config needed h2 database by setting db.driver=org.h2.Driver and not including db.url
#db.driver=org.postgresql.Driver
#db.driver=org.h2.Driver
#db.url=jdbc:h2:./lift_proto.db;DB_CLOSE_ON_EXIT=FALSE
#be sure to create your database and update the line below!
db.url=jdbc:postgresql://localhost:5432/dbname?user=dbusername&password=thepassword

#our own remotely accessible URL
#this is needed for oauth to work. it's important to access the api over this url, e.g.
# if this is 127.0.0.1 don't use localhost to access it.
# (this needs to be a URL)
hostname=http://127.0.0.1:8080

#this is only useful for running the api locally via RunWebApp
#if you use it, make sure this matches your hostname port!
#if you want to change the port when running via the command line, use "mvn -Djetty.port=8089 jetty:run" instead
dev.port=8080


#The start of the api path (before the version)
#It is *strongly* recommended not to change this - since Apps will be expecting the api at /obp/+version
#Including it here so we have a canonical source of the value
#This was introduced March 2016, some code might use hardcoded value instead.
#Default value is obp (highly recomended)
apiPathZero=obp

#sending mail out
#not need in dev mode, but important for production
mail.api.consumer.registered.sender.address=no-reply@example.com
mail.api.consumer.registered.notification.addresses=you@example.com
mail.smtp.host=127.0.0.1
mail.smtp.port=25

#oauth token timeout
token_expiration_weeks=4



### sandbox

#set this to true if you want to allow users to create sandbox test accounts with a starting balance
allow_sandbox_account_creation=true

#set this to true if you want to allow the "data import" api call
allow_sandbox_data_import=true

#secret key that allows access to the "data import" api. You should change this to your own secret key
sandbox_data_import_secret=change_me



### api features

#secret key that allows access to the "add cash transactions" api. You should change this to your own secret key
cashApplicationKey=change_me

#set this to false if you don't want the api payments call to work (starting with v1.2.1)
payments_enabled=true

#transaction requests are replacing simple payments starting from 1.4.0
transactionRequests_enabled=true
transactionRequests_connector=mapped
transactionRequests_supported_types=SANDBOX_TAN,INTRABANK,SEPA,FREE_FORM


# For video conference meetings (createMeeting)
meeting.tokbox_enabled=false
meeting.tokbox_api_key=changeme
meeting.tokbox_api_secret=changeme



### management modules

#rabbitMQ settings (used to communicate with HBCI project)
connection.host=localhost
connection.user=theusername
connection.password=thepassword

#secret key that allows access to the "add transactions" api. You should change this to your own secret key
importer_secret=change_me

#set this to true if you want to have the api send a message to the hbci project to refresh transactions for an account
messageQueue.updateBankAccountsTransaction=false

#the minimum time between updates in hours
messageQueue.updateTransactionsInterval=1

#set this to true if you want to have the api listen for "create account" messages from the hbci project
messageQueue.createBankAccounts=true

#set this to true if you want to allow users to delete accounts (local ones like HBCI connected)
allow_account_deletion=true

#secret key that allows access to api calls to get info about oauth tokens. You should change this
#to your own secret key
BankMockKey=change_me



### web interface configuration
webui_header_logo_left_url = /media/images/logo.png
webui_header_logo_right_url =
webui_index_page_about_section_background_image_url = /media/images/about-background.jpg
webui_index_page_about_section_text = <p class="about-text"> \
                                        Welcome to the API Sandbox powered by the Open Bank Project! <br/> \
                                      </p>


# API Explorer url. Change to your instance
webui_api_explorer_url = http://apiexplorer.openbankproject.com

# Sofi url. (AKA Social Finance) Change to your instance
webui_sofi_url = http://sofi.openbankproject.com

# Starting page of documentation. Change this if you have a specific landing page.
webui_api_documentation_url = https://github.com/OpenBankProject/OBP-API/wiki


# To display a custom message above the username / password box
# We currently use this to display example customer login in sandbox etc.
webui_login_page_special_instructions=

# Link for SDKs
webui_sdks_url = https://github.com/OpenBankProject/OBP-API/wiki/OAuth-Client-SDKS



## For partner logos and links
webui_main_partners=[\
{"logoUrl":"http://www.example.com/images/logo.png", "homePageUrl":"http://www.example.com", "altText":"Example 1"},\
{"logoUrl":"http://www.example.com/images/logo.png", "homePageUrl":"http://www.example.com", "altText":"Example 2"}]

# Main style sheet. Add your own if need be.
webui_main_style_sheet = /media/css/website.css

# Override certain elements (with important styles)
webui_override_style_sheet =


## API Options
apiOptions.getBranchesIsPublic = true
apiOptions.getAtmsIsPublic = true
apiOptions.getProductsIsPublic = true
apiOptions.getTransactionTypesIsPublic = true

# Default Bank. Incase the server wants to support a default bank so developers don't have to specify BANK_ID
# e.g. developers could use /my/accounts as well as /my/banks/BANK_ID/accounts
defaultBank.bank_id=THE_DEFAULT_BANK_ID


#  Super Admin Users (not database so we don't have to edit database)
super_admin_user_ids=USER_ID1,USER_ID2,